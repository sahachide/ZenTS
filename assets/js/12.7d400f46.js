(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{398:function(s,n,a){"use strict";a.r(n);var e=a(5),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[s._v("#")]),s._v(" "+s._s(s.$frontmatter.title))]),s._v(" "),a("GuideHeader",{attrs:{guide:"cli"}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#introduction"}},[s._v("Introduction")])]),a("li",[a("a",{attrs:{href:"#installation"}},[s._v("Installation")])]),a("li",[a("a",{attrs:{href:"#help-command-and-help"}},[s._v("Help command and --help")])]),a("li",[a("a",{attrs:{href:"#list-of-commands"}},[s._v("List of commands")]),a("ul",[a("li",[a("a",{attrs:{href:"#create-command"}},[s._v("create command")])]),a("li",[a("a",{attrs:{href:"#dev-command"}},[s._v("dev command")])]),a("li",[a("a",{attrs:{href:"#build-command"}},[s._v("build command")])]),a("li",[a("a",{attrs:{href:"#add-controller-command"}},[s._v("add:controller command")])]),a("li",[a("a",{attrs:{href:"#add-service-command"}},[s._v("add:service command")])]),a("li",[a("a",{attrs:{href:"#add-entity-command"}},[s._v("add:entity command")])])])]),a("li",[a("a",{attrs:{href:"#using-the-cli-programmatically"}},[s._v("Using the CLI programmatically")])]),a("li",[a("a",{attrs:{href:"#extending-the-cli-with-plugins"}},[s._v("Extending the CLI with plugins")]),a("ul",[a("li",[a("a",{attrs:{href:"#installing-a-plugin"}},[s._v("Installing a plugin")])]),a("li",[a("a",{attrs:{href:"#uninstall-a-plugin"}},[s._v("Uninstall a plugin")])]),a("li",[a("a",{attrs:{href:"#update-all-plugins"}},[s._v("Update all plugins")])]),a("li",[a("a",{attrs:{href:"#list-all-installed-plugins"}},[s._v("List all installed plugins")])]),a("li",[a("a",{attrs:{href:"#link-a-plugin"}},[s._v("Link a plugin")])]),a("li",[a("a",{attrs:{href:"#writing-own-plugins"}},[s._v("Writing own plugins")])])])])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[s._v("#")]),s._v(" Introduction")]),s._v(" "),a("p",[s._v("The ZenTS CLI is a command-line interface tool that helps you to initialize, develop, build and maintain your application. It comes with a development server and a ready to use TypeScript compiler. Furthermore it has serval generators, which helps you to scaffolding your ZenTS projects and assist you while you develop a application. This guide will introduce you to the useful commands ZenTS CLI offers. While totally optional, installing and working with the CLI is highly recommend when you use ZenTS.")]),s._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[s._v("#")]),s._v(" Installation")]),s._v(" "),a("p",[s._v("ZenTS CLI can be found in the npm registry and should be installed globally:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" zents-cli -g\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The above command will install ZenTS CLI globally using "),a("em",[s._v("npm")]),s._v(". This guide will continue using "),a("em",[s._v("npm")]),s._v(" as package manager, but feel free to use other packaging managers and refer to their documentation on how to install packages globally.")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("An alternative way to use ZenTS CLI is the "),a("code",[s._v("npx")]),s._v(" command. Please take a look on the "),a("a",{attrs:{href:"https://github.com/npm/npx",target:"_blank",rel:"noopener noreferrer"}},[s._v("documentation"),a("OutboundLink")],1),s._v(" on how to use the "),a("code",[s._v("npx")]),s._v(" command, but in a nutshell, you just perpend "),a("code",[s._v("npx")]),s._v(" to every command listen in this guide and you're good to go.")])]),s._v(" "),a("p",[s._v("After the installation we can check if everything is working correctly using the "),a("code",[s._v("zen")]),s._v(" command:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen --version\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("If correctly installed, this command will show the installed version of the CLI.")]),s._v(" "),a("h2",{attrs:{id:"help-command-and-help"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#help-command-and-help"}},[s._v("#")]),s._v(" Help command and --help")]),s._v(" "),a("p",[s._v("The CLI has a general "),a("code",[s._v("help")]),s._v(" command, which shows you an overview of the installed commands, the current version and so on.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Furthermore every command has a "),a("code",[s._v("--help")]),s._v(" flag, which shows a corresponding help text. For example:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen create --help\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("Will display the help of the "),a("code",[s._v("create")]),s._v(" command. Make use of the "),a("code",[s._v("--help")]),s._v(" flag if you get stuck or want to figure out more about a specific command.")]),s._v(" "),a("h2",{attrs:{id:"list-of-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-of-commands"}},[s._v("#")]),s._v(" List of commands")]),s._v(" "),a("p",[s._v("The following chapter contains all available CLI commands. Most of them have to be executed in a existing ZenTS project directory.")]),s._v(" "),a("h3",{attrs:{id:"create-command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-command"}},[s._v("#")]),s._v(" create command")]),s._v(" "),a("p",[s._v("The "),a("code",[s._v("create")]),s._v(" command is used to bootstrap a new ZenTS project with the recommend folder structure.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen create myproject\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The above command will create a new ZenTS project in a "),a("code",[s._v("myproject")]),s._v(" folder relative to the directory you called the command.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ zen create --help\n\ncreate a new ZenTS project inside PROJECTNAME directory.\n\nUSAGE\n  $ zen create PROJECTNAME\n\nOPTIONS\n  -c, --clean  clean "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" directory before running installation\n  -h, --help   show CLI "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n\nALIASES\n  $ zen create-project\n\nEXAMPLE\n  $ zen create myproject\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"dev-command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dev-command"}},[s._v("#")]),s._v(" dev command")]),s._v(" "),a("p",[s._v("Start a development server with hot reloading and automatically build of TypeScript files. The command has to be executed inside a ZenTS project folder.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ zen dev --help\n\nrun a ZenTS project with a dev server, tsc-watch and browser-sync.\n\nUSAGE\n  $ zen dev\n\nOPTIONS\n  -h, --help                   show CLI "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n  --"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("no-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("server                enable/Disable the web-server. Enabled by default, "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" --no-server flag to disable.\n  --"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("no-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("sync                  enable/Disable the browser-sync with the web-server. Enabled by default, "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" --no-sync flag to disable.\n  --sync-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sync-port        the port browser-sync will use "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("if none is provided will determine a "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" port between "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),s._v(" and "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8999")]),s._v(" automatically"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  --sync-ui-port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sync-ui-port  the port browser-sync ui will use "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("if none is provided will determine a "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" port between "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v(" and "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9999")]),s._v(" automatically"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  --"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("no-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("tsc                   enable/Disable the TypeScript "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("watch")]),s._v(" compiler. Enabled by default, "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" --no-tsc flag to disable.\n\nEXAMPLE\n  $ zen dev\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"build-command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-command"}},[s._v("#")]),s._v(" build command")]),s._v(" "),a("p",[s._v("Builds a ZenTS project. Using the command has the advantage, that template files are copied over to the dist directory. The "),a("code",[s._v("tsconfig.json")]),s._v(" (or similar) is respected by the "),a("code",[s._v("build")]),s._v(" command. The command has to be executed inside a ZenTS project folder.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen build\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen build --help\n\nbuild a ZenTS application. This "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" will compile the TypeScript files and copy the projects templates to the dist folder.\n\nUSAGE\n  $ zen build\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"add-controller-command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-controller-command"}},[s._v("#")]),s._v(" add:controller command")]),s._v(" "),a("p",[s._v("Creates a new boilerplate controller for a project. The command has to be executed inside a ZenTS project folder.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen add:controller Foo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The above command will create a "),a("code",[s._v("src/controller/FooController.ts")]),s._v(" file.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen add:controller --help\n\ncreate a new ZenTS controller class.\n\nUSAGE\n  $ zen add:controller NAME\n\nARGUMENTS\n  NAME  name of the controller, e.g. "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Product"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" The "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Controller"')]),s._v(" appendix should be omitted.\n\nOPTIONS\n  -f, --force  force creation, eventually overwriting existing "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n\nEXAMPLES\n  $ zen add:controller Product\n  $ zen add:controller User\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h3",{attrs:{id:"add-service-command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-service-command"}},[s._v("#")]),s._v(" add:service command")]),s._v(" "),a("p",[s._v("Creates a new boilerplate service for a project. The command has to be executed inside a ZenTS project folder.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen add:service Foo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The above command will create a "),a("code",[s._v("src/service/FooService.ts")]),s._v(" file.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen add:service --help\n\ncreate a new ZenTS "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" class.\n\nUSAGE\n  $ zen add:service NAME\n\nARGUMENTS\n  NAME  name of the service, e.g. "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Util"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" The "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Service"')]),s._v(" appendix should be omitted.\n\nOPTIONS\n  -f, --force  force creation, eventually overwriting existing "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n\nEXAMPLE\n  $ zen add:service Util\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"add-entity-command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-entity-command"}},[s._v("#")]),s._v(" add:entity command")]),s._v(" "),a("p",[s._v("Creates a new boilerplate entity for a project. The command has to be executed inside a ZenTS project folder.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen add:entity Foo\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("The above command will create a "),a("code",[s._v("src/entity/Foo.ts")]),s._v(" file.")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen add:entity --help\n\ncreate a new ZenTS/TypeORM entity class.\n\nUSAGE\n  $ zen add:entity NAME\n\nARGUMENTS\n  NAME  name of the entity, e.g. "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Product"')]),s._v("\n\nOPTIONS\n  -f, --force  force creation, eventually overwriting existing "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n\nEXAMPLES\n  $ zen add:entity Product\n  $ zen add:entity User\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h2",{attrs:{id:"using-the-cli-programmatically"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-the-cli-programmatically"}},[s._v("#")]),s._v(" Using the CLI programmatically")]),s._v(" "),a("p",[s._v("The CLI commands can be used programmatically calling their corresponding "),a("code",[s._v("run()")]),s._v(" methods. For example if you want to use the "),a("code",[s._v("dev")]),s._v(" command programmatically you have to import the zents-cli package, which exports a "),a("code",[s._v("Dev")]),s._v(" command object:")]),s._v(" "),a("div",{staticClass:"language-typescript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" Dev "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zents-cli'")]),s._v("\n\nDev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--sync'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("The "),a("em",[s._v("add")]),s._v(" generator commands are exported as "),a("strong",[s._v("AddCOMMAND")]),s._v(", e.g. "),a("code",[s._v("AddController")]),s._v(" or "),a("code",[s._v("AddService")]),s._v(". The "),a("code",[s._v("run()")]),s._v(" method accepts one argument, an array of flags and/or positional arguments for the given command.")]),s._v(" "),a("h2",{attrs:{id:"extending-the-cli-with-plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extending-the-cli-with-plugins"}},[s._v("#")]),s._v(" Extending the CLI with plugins")]),s._v(" "),a("p",[s._v("ZenTS's CLI can be extended with plugins. A plugin can introduce one or multiple new commands for the CLI or even overwrite a given command (by exposing the same command name as the existing ones).")]),s._v(" "),a("h3",{attrs:{id:"installing-a-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing-a-plugin"}},[s._v("#")]),s._v(" Installing a plugin")]),s._v(" "),a("p",[s._v("New plugins can be installed using the following command:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen plugins:install PLUGIN\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen plugins:install --help\n\ninstalls a plugin into the CLI\n\nUSAGE\n  $ zen plugins:install PLUGIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\nARGUMENTS\n  PLUGIN  plugin to "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\nOPTIONS\n  -f, --force    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("yarn")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" with force flag\n  -h, --help     show CLI "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n  -v, --verbose\n\nDESCRIPTION\n  Can be installed from "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" or a "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" url.\n\n  Installation of a user-installed plugin will override a core plugin.\n\n  e.g. If you have a core plugin that has a "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" command, installing a user-installed plugin with a "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" will override the core plugin implementation. This is useful "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" a user needs to update core plugin\n  functionality "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the CLI without the need to patch and update the whole CLI.\n\nALIASES\n  $ zen plugins:add\n\nEXAMPLES\n  $ zen plugins:install myplugin\n  $ zen plugins:install https://github.com/someuser/someplugin\n  $ zen plugins:install someuser/someplugin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("h3",{attrs:{id:"uninstall-a-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uninstall-a-plugin"}},[s._v("#")]),s._v(" Uninstall a plugin")]),s._v(" "),a("p",[s._v("To uninstall a plugin use the following command:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen plugins:uninstall PLUGIN\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen plugins:uninstall --help\n\nremoves a plugin from the CLI\n\nUSAGE\n  $ zen plugins:uninstall PLUGIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\nARGUMENTS\n  PLUGIN  plugin to uninstall\n\nOPTIONS\n  -h, --help     show CLI "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n  -v, --verbose\n\nALIASES\n  $ zen plugins:unlink\n  $ zen plugins:remove\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"update-all-plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update-all-plugins"}},[s._v("#")]),s._v(" Update all plugins")]),s._v(" "),a("p",[s._v("All plugins can be updated using the "),a("code",[s._v("update")]),s._v(" command:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen plugins:update\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen plugins:update --help\n\nupdate installed plugins\n\nUSAGE\n  $ zen plugins:update\n\nOPTIONS\n  -h, --help     show CLI "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n  -v, --verbose\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"list-all-installed-plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-all-installed-plugins"}},[s._v("#")]),s._v(" List all installed plugins")]),s._v(" "),a("p",[s._v("All installed plugins can be listed using the following command:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen plugins\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen plugins --help\n\nlist installed plugins\n\nUSAGE\n  $ zen plugins\n\nOPTIONS\n  --core  show core plugins\n\nEXAMPLE\n  $ zen plugins\n\nCOMMANDS\n  plugins:install    installs a plugin into the CLI\n  plugins:link       links a plugin into the CLI "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" development\n  plugins:uninstall  removes a plugin from the CLI\n  plugins:update     update installed plugins\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("h3",{attrs:{id:"link-a-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link-a-plugin"}},[s._v("#")]),s._v(" Link a plugin")]),s._v(" "),a("p",[s._v("Links a plugin into the CLI for development:")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen plugins:link PLUGIN\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("zen plugins:link --help\n\nlinks a plugin into the CLI "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" development\n\nUSAGE\n  $ zen plugins:link PLUGIN\n\nARGUMENTS\n  "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("default: ."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" path to plugin\n\nOPTIONS\n  -h, --help     show CLI "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v("\n  -v, --verbose\n\nDESCRIPTION\n  Installation of a linked plugin will override a user-installed or core plugin.\n\n  e.g. If you have a user-installed or core plugin that has a "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" command, installing a linked plugin with a "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" will override the user-installed or core plugin implementation. This is useful "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" development\n  work.\n\nEXAMPLE\n  $ zen plugins:link myplugin\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h3",{attrs:{id:"writing-own-plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writing-own-plugins"}},[s._v("#")]),s._v(" Writing own plugins")]),s._v(" "),a("p",[s._v("A plugin is basically a set of commands or one single command which does something for the user. Commands for the CLI are written using the awesome "),a("em",[s._v("oclif")]),s._v(" CLI framework. Please take a look at the "),a("a",{attrs:{href:"https://oclif.io/docs/commands",target:"_blank",rel:"noopener noreferrer"}},[s._v("official documentation"),a("OutboundLink")],1),s._v(" on how to write commands. After you've finished coding and published your command on "),a("em",[s._v("npm")]),s._v(" (or "),a("em",[s._v("git")]),s._v(") you can install it using the command listen above.")])],1)}),[],!1,null,null,null);n.default=t.exports}}]);